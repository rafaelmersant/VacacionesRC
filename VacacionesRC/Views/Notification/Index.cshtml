@model IEnumerable<VacacionesRC.Models.Notification>

@{
    ViewBag.Title = "Notificaciones";
}

<div class="container-fluid">
    <section class="text-dark border-custom border">
        <div class="bg-secondary text-light panel-custom border">
            <h6 class="panel-title">
                Notificaciones
            </h6>
        </div>

        <div class="row bg-light ml-3 mr-3 mt-2">
            <div class="col-2 mt-3 mb-3 ml-1">
                <input type="text" id="receiverEmail" name="receiverEmail" value="" class="form-control form-control-sm" autocomplete="off" placeholder="Correo" />
            </div>
            <div class="col-8 mt-3 mb-3 ml-1">
                <input type="text" id="message" name="message" value="" class="col-12 form-control form-control-sm" autocomplete="off" placeholder="Mensaje" />
            </div>
            <div class="col-1 mt-3">
                <a class="btn btn-sm btn-danger pl-3 pr-3" href="javascript:void(0)" onclick="sendNotification()">Enviar</a>
            </div>

        </div>

        @if (Model.Count() == 0)
        {
        <div class="text-center mb-5 mt-5">
            <h5>No existen notificaciones para mostrar</h5>
        </div>
        }
        else
        {
            <div class="mt-3 ml-2 mr-2">
                <table id="notificationsTable" class="table table-striped table-bordered table-condensed table-sm mt-4">
                    <thead>
                        <tr>
                            <th>
                                Enviado a
                            </th>
                            <th>
                                Mensaje
                            </th>
                            <th>
                                Enviador por
                            </th>
                            <th style="min-width:110px">
                                Fecha de envío
                            </th>

                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@item.ReceiverEmail</td>
                                <td>@item.Message</td>
                                <td>@item.SenderEmail</td>
                                <td>@string.Format("{0:dd/MM/yyyy hh:mm tt}", item.CreatedDate)</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </section>
</div>


<link href="~/Content/dataTables.bootstrap4.min.css" rel="stylesheet" />

@section scripts {
    <script src="~/Scripts/jquery.dataTables.min.js"></script>
    <script src="~/Scripts/dataTables.bootstrap4.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
}
<script type="text/javascript">

    $(document).ready(function () {
        $(".datepicker").datepicker({ dateFormat: 'dd/mm/yy' });

        $("#notificationsTable").DataTable({
            "order": [[3, "desc"]]
        });

        //Replace Previous -> Anterior
        $('body :not(script)').contents().filter(function () {
            return this.nodeType === 3;
        }).replaceWith(function () {
            return this.nodeValue.replace('Previous', 'Anterior');
        });

        //Replace Next -> Próximo
        $('body :not(script)').contents().filter(function () {
            return this.nodeType === 3;
        }).replaceWith(function () {
            return this.nodeValue.replace('Next', 'Próximo');
        });

        //Replace Showing -> Mostrando
        $('body :not(script)').contents().filter(function () {
            return this.nodeType === 3;
        }).replaceWith(function () {
            return this.nodeValue.replace('Showing', 'Mostrando');
        });

        //Replace Show -> Mostrar
        $('body :not(script)').contents().filter(function () {
            return this.nodeType === 3;
        }).replaceWith(function () {
            return this.nodeValue.replace('Show', 'Mostrar');
        });

        //Replace Entries -> Registros
        $('body :not(script)').contents().filter(function () {
            return this.nodeType === 3;
        }).replaceWith(function () {
            return this.nodeValue.replace('entries', 'registros');
        });

        //Replace Search -> Buscar
        $('body :not(script)').contents().filter(function () {
            return this.nodeType === 3;
        }).replaceWith(function () {
            return this.nodeValue.replace('Search', 'Buscar');
        });
    });

    function sendNotification() {

        const receiverEmail = $("#receiverEmail").val();
        const message = $("#message").val();

        if (receiverEmail === '' || message === '') {
            alert("Favor completar todos los campos.")
            return false;
        }

        if (confirm(`Seguro que desea enviar esta notificación?`)) {

            $.ajax({
                "url": `/Notification/SendNotification?receiverEmail=${receiverEmail}&message=${message}`,
                "type": "POST",
                "success": function (response) {
                    if (response.result === "200") {
                        alert("La notificación fue enviada.")
                        window.location.reload();
                    } else {
                        console.log(response.message);
                        if (response.message.includes("501")) {
                            alert(response.message)
                        } else {
                            alert('Hubo un error tratando de enviar la notificación.');
                        }
                    }
                }
            });
        }
    }

    function GetDateFormat(date) {
        const parts = date.split("/");
        const dt = new Date(parseInt(parts[2], 10),
            parseInt(parts[1], 10) - 1,
            parseInt(parts[0], 10));

        return dt.toLocaleDateString();
    }

</script>

