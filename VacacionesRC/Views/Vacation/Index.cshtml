@model IEnumerable<VacacionesRC.ViewModels.VacationModel>

@{
    ViewBag.Title = "Listado de Solicitudes de Vacaciones";
    var statusColor = "";
}

<style type="text/css">
    tr.tr-hover-class:hover {
        background: lightgray !important;
    }
</style>

<div class="container-fluid">
    <section class="text-dark border-custom border">
        <div class="bg-secondary text-light panel-custom border">
            <h6 class="panel-title">
                Listado de Solicitudes de Vacaciones
            </h6>
        </div>

        <div class="ml-2 mt-1 mb-1 mr-2 float-right">
            <span>Año</span> @Html.DropDownList("IdYear", new SelectList(ViewBag.Years, "Text", "Value"), new
                        {
                            @class = "form-control-sm",
                            @style = "border: 1px solid lightgray; color: gray",
                            @onchange = "filterByYear($('#IdYear').val())"
                        })
        </div>

        <!--
    <div class="row bg-light ml-3 mr-3 mt-2">
        <div class="col-2 mt-3 mb-3 ml-1">
            <input type="text" id="requestedDate" name="holidate" value="" class="datepicker form-control form-control-sm" autocomplete="off" placeholder="Elegir día" />
        </div>
        <div class="col-2 mt-3">
            <a class="btn btn-sm btn-danger pl-3 pr-3" href="javascript:void(0)" onclick="FilterData()">Filtrar</a>
        </div>

    </div>
        -->

        @if (Model.Count() == 0)
                    {
            <div class="text-center mt-5 mb-5">
                <h5>No existen registros para mostrar</h5>
            </div>
        }
        else
        {
            <div class="mt-3 ml-2 mr-2">
                <table id="vacationsTable" class="table table-striped table-bordered table-condensed table-sm mt-4">
                    <thead>
                        <tr>
                            <th>
                                Id
                            </th>
                            <th style="width: 50px">
                                Fecha Solicitud
                            </th>
                            @if (Session["role"] != null && 
                                (Session["role"].ToString().Contains("APROBADOR") || Session["role"].ToString().Contains("DIRECTOR") || Session["role"].ToString().Contains("APOYO") || Session["role"].ToString() == "Admin"))
                            {
                                <th>
                                    Código
                                </th>
                                <th>
                                    Nombre
                                </th>
                                <th>
                                    Puesto
                                </th>
                                <th>
                                    Departamento
                                </th>
            }

                            <th style="width: 50px">
                                Fecha Inicio
                            </th>
                            <th style="width: 50px">
                                Fecha Fin
                            </th>
                            <th class="text-center" style="width: 50px">
                                Días Solicitados
                            </th>
                            <th style="width: 50px">
                                Fecha Regreso
                            </th>
                            <th class="text-center" style="width: 10px">
                                Año
                            </th>
                            <th class="text-center" style="width: 80px">
                                Estatus
                            </th>

                            @if (Session["role"] != null && (Session["role"].ToString().Contains("APROBADOR") || Session["role"].ToString().Contains("DIRECTOR") || Session["role"].ToString() == "Admin"))
                            {
                                <th class="text-center" style="width: 15px">Aprobar</th>
                                <th class="text-center" style="width: 15px">Rechazar</th>
                            }

                            @*<th class="text-center" style="width: 20px">Editar</th>*@
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            if (item.Status.Contains("Rechazada"))
                            {
                                statusColor = "text-danger";
                            }
                            if (item.Status.Contains("Aprobada"))
                            {
                                statusColor = "text-success";
                            }
                            if (item.Status == "En proceso")
                            {
                                statusColor = "text-dark";
                            }
                            if (item.Status == "Suspendida")
                            {
                                statusColor = "text-dark";
                            }

                        <tr class="tr-hover-class" onclick="location.href = '@Url.Action("Formulario", new { id = @item.IdHash })'" style="cursor: pointer" title="Click para ver detalle">
                            <td>@item.Id</td>
                            <td>@string.Format("{0:dd/MM/yyyy hh:mm tt}", item.CreatedDate)</td>

                            @if (Session["role"] != null &&
                                (Session["role"].ToString().Contains("APROBADOR") || Session["role"].ToString().Contains("DIRECTOR") || Session["role"].ToString().Contains("APOYO") || Session["role"].ToString() == "Admin"))
                            {
                                <td>@item.EmployeeId</td>
                                <td>@item.EmployeeName</td>
                                <td>@item.EmployeePosition</td>
                                <td>@item.DeptoName</td>
                            }
                                <td>
                                    @*@if (item.Status.Contains("Suspendida"))
                                    {
                                        <span></span>
                                    }
                                    else
                                    {*@
                                        <span>@string.Format("{0:dd/MM/yyyy}", item.StartDate)</span>
                                    @*}*@
                                    
                                </td>
                                <td>
                                    @if (item.Status.Contains("Suspendida"))
                                    {
                                        <span></span>
                                    }
                                    else
                                    {
                                        <span>@string.Format("{0:dd/MM/yyyy}", item.EndDate)</span>
                                    }
                                </td>
                            <td class="text-center">
                                @if (item.Status.Contains("Suspendida"))
                                {
                                    <span>0</span>
                                }
                                else
                                {
                                    <span>@item.DaysRequested</span>
                                }
                            </td>
                            <td>@string.Format("{0:dd/MM/yyyy}", item.ReturnDate)</td>
                            <td class="text-center">@item.Year</td>
                            <td class="text-center @(statusColor)"><b>@item.Status</b></td>

                            @if (Session["role"] != null && (Session["role"].ToString().Contains("APROBADOR") || Session["role"].ToString().Contains("DIRECTOR") || Session["role"].ToString() == "Admin"))
                            {
                                if ((Session["employeeId"].ToString() == item.EmployeeId.ToString() && Session["role"].ToString() != "Admin") || (item.RejectedDate != null || item.AcceptedDate != null) || (item.Status.Contains("Suspendida")))
                                {
                                    <td align="center">
                                        <button class="btn btn-sm btn-secondary" disabled>
                                            <span class="fa fa-check"></span>
                                        </button>
                                    </td>

                                    if (item.AcceptedDate != null && item.RejectedDate == null && item.StartDate > DateTime.Today && Session["role"].ToString() == "Admin")
                                    {
                                        <td align="center">
                                            <a class="btn btn-sm btn-danger" href="javascript:void(0)" onclick="rejectRequest(@item.Id)" title="Rechazar">
                                                <i class="fa fa-remove"></i>
                                            </a>
                                        </td>
                                    }
                                    else
                                    {
                                        <td align="center">
                                            <button class="btn btn-sm btn-secondary" disabled>
                                                <span class="fa fa-remove"></span>
                                            </button>
                                        </td>
                                    }
                                }
                                else
                                {
                                    <td align="center">
                                        <a class="btn btn-sm btn-success" href="javascript:void(0)" onclick="acceptRequest(@item.Id)" title="Aprobar">
                                            <i class="fa fa-check"></i>
                                        </a>
                                    </td>
                                    <td align="center">
                                        <a class="btn btn-sm btn-danger" href="javascript:void(0)" onclick="rejectRequest(@item.Id)" title="Rechazar">
                                            <i class="fa fa-remove"></i>
                                        </a>
                                    </td>
                                }
                            }
                        </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </section>
</div>


<link href="~/Content/dataTables.bootstrap4.min.css" rel="stylesheet" />

@section scripts {
    <script src="~/Scripts/jquery.dataTables.min.js"></script>
    <script src="~/Scripts/dataTables.bootstrap4.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
}
<script type="text/javascript">

    $(document).ready(function () {
        $(".datepicker").datepicker({ dateFormat: 'dd/mm/yy' });

        $("#vacationsTable").DataTable({
            "order": [[0, "desc"]]
        });

        const url = window.location.pathname
        const id = url.substring(url.lastIndexOf('/') + 1);
        if (id) {
            console.log('id', id)
            $(`#IdYear option[value='${id}'`).attr('selected', 'selected');
        }
            
        //Replace Previous -> Anterior
        $('body :not(script)').contents().filter(function () {
            return this.nodeType === 3;
        }).replaceWith(function () {
            return this.nodeValue.replace('Previous', 'Anterior');
        });

        //Replace Next -> Próximo
        $('body :not(script)').contents().filter(function () {
            return this.nodeType === 3;
        }).replaceWith(function () {
            return this.nodeValue.replace('Next', 'Próximo');
        });

        //Replace Showing -> Mostrando
        $('body :not(script)').contents().filter(function () {
            return this.nodeType === 3;
        }).replaceWith(function () {
            return this.nodeValue.replace('Showing', 'Mostrando');
        });

        //Replace Show -> Mostrar
        $('body :not(script)').contents().filter(function () {
            return this.nodeType === 3;
        }).replaceWith(function () {
            return this.nodeValue.replace('Show', 'Mostrar');
        });

        //Replace Entries -> Registros
        $('body :not(script)').contents().filter(function () {
            return this.nodeType === 3;
        }).replaceWith(function () {
            return this.nodeValue.replace('entries', 'registros');
        });

        //Replace Search -> Buscar
        $('body :not(script)').contents().filter(function () {
            return this.nodeType === 3;
        }).replaceWith(function () {
            return this.nodeValue.replace('Search', 'Buscar');
        });

        //No data available in table -> No hay registros disponibles
        $('body :not(script)').contents().filter(function () {
            return this.nodeType === 3;
        }).replaceWith(function () {
            return this.nodeValue.replace('No data available in table', 'No hay registros disponibles');
        });
    });

    function rejectRequest(id) {
        event.preventDefault();
        event.stopImmediatePropagation();
        
        if (confirm(`Seguro que desea RECHAZAR esta solicitud de vacaciones? \n Esta acción no es reversible.`)) {
            $.ajax({
                "url": "/Vacation/RejectRequest?id=" + id,
                "type": "POST",
                "success": function (response) {
                    if (response.result === "200") {
                        window.location.reload();
                    } else {
                        console.log(response.message);
                        if (response.message.includes("501")) {
                            alert(response.message)
                        } else {
                            alert('Hubo un error tratando de rechazar la solicitud de vacaciones.');
                        }
                    }
                }
            });
        }
    }

    function acceptRequest(id) {
        event.preventDefault();
        event.stopImmediatePropagation();

        if (confirm(`Seguro que desea APROBAR esta solicitud de vacaciones?`)) {
            $.ajax({
                "url": "/Vacation/AcceptRequest?id=" + id,
                "type": "POST",
                "success": function (response) {
                    if (response.result === "200") {
                        window.location.reload();
                    } else {
                        console.log(response.message);
                        if (response.message.includes("501")) {
                            alert(response.message)
                        } else {
                            alert('Hubo un error tratando de aprobar la solicitud de vacaciones.');
                        }
                    }
                }
            });
        }
    }

    function filterByYear(year) {
        
        if (year && year != "Todos") {
            window.location = `/Vacation/Index/${year}`
        } else {
            window.location = `/Vacation`
        }
    }

    function GetDateFormat(date) {
        const parts = date.split("/");
        const dt = new Date(parseInt(parts[2], 10),
            parseInt(parts[1], 10) - 1,
            parseInt(parts[0], 10));

        return dt.toLocaleDateString();
    }

</script>


