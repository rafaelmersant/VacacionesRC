@model VacacionesRC.Models.Vacation

@{
    ViewBag.Title = "Formulario Solicitud de Vacaciones";
}

<style>
    .disable-button {
        cursor: not-allowed;
    }
</style>

<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">

<div class="text-center mb-4">
    <h5>Formulario para Solicitud de Vacaciones</h5>
</div>

<div class="container-fluid">
    <section class="bg-light text-dark border-custom">
        <div class="bg-secondary text-light panel-custom border">
            <h6 class="panel-title">
                Información del Colaborador
            </h6>
        </div>

        <form class="mt-3 ml-2 mr-2">
            <div class="form-row">

                <div class="form-group col-4">
                    <div class="row">
                        <div class="col-3 mb-1">
                            <label for="validationDefault01">Código</label>
                            <input type="text" id="employeeId" name="employeeId" value="" class="form-control form-control-sm numericOnly" autocomplete="off" />
                        </div>
                        <div class="col-2">
                            <a class="btn btn-sm btn-info" href="javascript:void(0)" id="btnSearchEmployee" title="Buscar" style="margin-top: 27px">
                                <i class="fa fa-search"></i>
                            </a>
                            <span id="waitingIndicator" class="spinner-border text-danger" style="margin-top: 27px; margin-right: 5px; display: none"></span>
                        </div>

                        <div class="col-7">
                            <label for="validationDefault01">Fecha de Ingreso</label>
                            <input type="text" id="employeeAdmissionDate" name="employeeAdmissionDate" value="" class="form-control form-control-sm" readonly />
                        </div>
                    </div>
                </div>

                <div class="form-group col">
                    <label for="validationDefault01">Fecha de renovación de vacaciones</label>
                    <input type="text" id="nextAvailableDate" name="nextAvailableDate" value="" class="form-control form-control-sm col-12" readonly />
                </div>
                <div class="form-group col">
                    <label for="validationDefault01">Fecha de Vencimiento de Vacaciones</label>
                    <input type="text" id="dueDate" name="dueDate" value="" class="form-control form-control-sm col-12" readonly />
                </div>

            </div>

            <div class="form-row pb-3">
                <div class="form-group col">
                    <label for="validationDefault01">Nombres</label>
                    <input type="text" id="employeeName" name="employeeName" value="" class="form-control form-control-sm col-12" readonly />
                </div>
                <div class="form-group col">
                    <label for="validationDefault01">Puesto</label>
                    <input type="text" id="employeePosition" name="employeePosition" value="" class="form-control form-control-sm col-12" readonly />
                </div>
                <div class="form-group col">
                    <label for="validationDefault01">Departamento</label>
                    <input type="text" id="employeeDepto" name="employeeDepto" value="" class="form-control form-control-sm col-12" readonly />
                </div>
            </div>

        </form>
    </section>

    <section class="bg-light text-dark border-custom">
        <div class="bg-secondary text-light panel-custom border">
            <h6 class="panel-title">
                Vacaciones
            </h6>
        </div>

        <div class="mt-3 ml-2 mr-2 pb-3">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

            <section class="row">
                <div class="col-8">
                    <div class="form-row">
                        <div class="col-4 mb-2">
                            <label for="validationDefault01">Días Correspondientes</label>
                            <input type="text" id="daysTotal" name="daysTotal" value="" class="form-control form-control-sm" autocomplete="off" readonly />
                        </div>
                        <div class="col-4 mb-2">
                            <label for="validationDefault01">Días Disfrutados</label>
                            <input type="text" id="daysTaken" name="daysTaken" value="" class="form-control form-control-sm" autocomplete="off" readonly />
                        </div>
                        <div class="col-4 mb-2">
                            <label for="validationDefault01">Días Disponibles</label>
                            <input type="text" id="daysAvailable" name="daysAvailable" value="" class="form-control form-control-sm" autocomplete="off" readonly />
                        </div>

                    </div>

                    <div class="form-row">
                        <div class="col-4">
                            <label for="validationDefault02">Solicitar <b>Desde</b></label>
                            <input type="text" id="startDate" name="startDate" value="" class="datepicker form-control form-control-sm" autocomplete="off" />
                        </div>

                        <div class="col-4">
                            <label for="validationDefault02">Solicitar <b>Hasta</b></label>
                            <input type="text" id="endDate" name="endDate" value="" class="datepicker form-control form-control-sm" autocomplete="off" />
                        </div>
                        <div class="col-4 mb-2">
                            <label for="validationDefault01">Días Solicitados</label>
                            <input type="text" id="daysRequested" name="daysRequested" value="" class="form-control form-control-sm" autocomplete="off" readonly />
                        </div>

                        <input type="hidden" id="_returnDate" name="_returnDate" value=""/>
                    </div>
                </div>

                <div class="col-4">
                    <label for="validationDefault02">Observación</label>
                    
                    <textarea id="note" class="form-control form-control-sm col-12" style="height: 98px; font-size: 0.95em"></textarea>
                </div>
                <div id="returnDateDiv" class="mt-2 mb-2">
                    <span class="ml-3">Le corresponde reintegrarse a las labores el día <span id="returnDate" class="font-weight-bold"></span> </span>
                </div>
            </section>
                
                <button id="btnSaveForm" class="btn btn-sm btn-danger pl-5 pr-5 mt-3 ml-1">
                    Guardar
                </button>

                <span id="message" class="d-block pl-2 pr-2 pb-1 pt-1 mt-3 mb-0">@ViewBag.Message</span>
            }
        </div>
    </section>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
}

<script type="text/javascript">

    $(document).ready(function () {
        $("#returnDateDiv").hide()

        //$(".datepicker").val(new Date().toLocaleDateString())
        $(".datepicker").datepicker({ dateFormat: 'dd/mm/yy' });

        $(".numericOnly").keypress(function (e) {
            if (String.fromCharCode(e.keyCode).match(/[^0-9]/g)) return false;
        });

        $("#employeeId").keypress(function (evt) {
            if (evt.charCode === 13 && this.value.length > 1) {
                $("#btnSearchEmployee").click();
            }

            if (this.value.length >= 5)
                return false;
        });

        $("#btnSearchEmployee").click(function (e) {
            e.preventDefault();

            const employeeId = $("#employeeId").val();

            $("#employeeName").val('')
            $("#employeePosition").val('')
            $("#employeeDepto").val('')
            $("#daysTotal").val('')
            $("#startDate").val('')
            $("#endDate").val('')
            $("#daysRequested").val('')
            $("#note").val('')
            $("#_returnDate").val('')
            $("#returnDate").val('')

            $("#returnDateDiv").hide()

            $("#waitingIndicator").show();
            $("#btnSearchEmployee").hide();

            if (employeeId) {
                $.ajax({
                    "url": `/Vacation/GetEmployee?employeeId=${employeeId}`,
                    "type": "POST",
                    "success": async function (response) {
                        if (response.result === "200") {
                            const employee = JSON.parse(response.message);
                            $("#employeeName").val(employee.EmployeeName)
                            $("#employeePosition").val(employee.EmployeePosition)
                            $("#employeeDepto").val(employee.EmployeeDepto)
                            $("#employeeAdmissionDate").val(new Date(employee.AdmissionDate).toLocaleDateString("es-DO"))
                            
                            CorrespondingDays(employeeId);
                        }
                        else if (response.result === "404") {
                            alert('El colaborador no fue encontrado.');
                        }
                        else {
                            console.log(response.message);
                            alert('Hubo un error tratando de encontrar al colaborador.');
                        }

                        $("#waitingIndicator").hide();
                        $("#btnSearchEmployee").show();
                    }
                });
            }
        });

        $("#btnSaveForm").click(function (e) {
            e.preventDefault();

            const employeeId = $("#employeeId").val()
            const daysTaken = $("#daysTaken").val()
            const daysRequested = $("#daysRequested").val()
            const daysAvailable = $("#daysAvailable").val()
            
            const startDateFormatted = GetDateFormat($("#startDate").val())
            const endDateFormatted = GetDateFormat($("#endDate").val())

            let startDate = new Date(startDateFormatted)
            let endDate = new Date(endDateFormatted)
            let returnDate = new Date($("#_returnDate").val())

            startDate = startDate.toLocaleDateString()
            endDate = endDate.toLocaleDateString()
            returnDate = returnDate.toLocaleDateString()
            
            const note = $("#note").val()

            //$("#waitingIndicator").show();
            //$("#btnSearchEmployee").hide();
            const data = {
                'EmployeeId': employeeId,
                'DaysTaken': daysTaken,
                'DaysAvailable': daysAvailable,
                'DaysRequested': daysRequested,
                'StartDate': startDate,
                'EndDate': endDate,
                'ReturnDate': returnDate,
                'Note': note
            }
            
            if (employeeId) {
                $.ajax({
                    url: `/Vacation/Save`,
                    type: "POST",
                    data: data
                }).done(async function (response) {
                    if (response.result === "200") {
                        alert("El formulario fue guardado satisfactoriamente!")
                    }
                    else {
                        console.log(response.message);
                        alert(response.message);
                    }

                    //$("#waitingIndicator").hide();
                    //$("#btnSearchEmployee").show();

                }).fail(function (error) {
                    alert(error);
                })
            }
        });

        $("#startDate").on("change", function (evt) {
            validateDate()
        });

        $("#endDate").on("change", function (evt) {
            validateDate()
        });

    });

    const CorrespondingDays = (employeeId) => {
        $.ajax({
            "url": `/Vacation/GetCorrespondingDays/?employeeId=${employeeId}`,
            "type": "GET",
            "success": function (response) {
                if (response.result === "200") {
                    const employeeDay = JSON.parse(response.message);
                    $("#nextAvailableDate").val(new Date(employeeDay.RenovationDate).toLocaleDateString("es-DO"))
                    $("#dueDate").val(new Date(employeeDay.DueDate).toLocaleDateString("es-DO"))

                    $("#daysTotal").val(employeeDay.TotalDays)
                    $("#daysTaken").val(employeeDay.TakenDays)

                    const daysAvailable = parseInt(employeeDay.TotalDays) - parseInt(employeeDay.TakenDays)
                    $("#daysAvailable").val(daysAvailable)

                    const today = new Date();
                    const renovationDate = new Date(employeeDay.RenovationDate);

                    if (renovationDate > today) {
                        console.log('disable fields')
                        $("#startDate").prop("readonly", true)
                        $("#endDate").prop("readonly", true)
                    } else {
                        console.log('NOT disable fields')
                        $("#startDate").prop("readonly", false)
                        $("#endDate").prop("readonly", false)
                    }
                } else {
                    alert(response.message)
                }
            }
        })
    }

    function requestedDays(startDate, endDate) {
        $.ajax({
            "url": `/Vacation/RequestedDays?startDate=${startDate}&endDate=${endDate}`,
            "type": "POST",
            "success": async function (response) {
                
                if (response.result === "200") {
                    $("#daysRequested").val(response.requestedDays)
                    $("#_returnDate").val(response.returnDate)
                    $("#returnDate").html(new Date(response.returnDate).toLocaleDateString("es-DO"))
                    $("#returnDateDiv").show()

                    requestedDaysGreaterThenAvailableDays()
                }
                else {
                    $("#daysRequested").val("0")
                    $("#returnDate").html('')
                    $("#returnDateDiv").hide()
                }
            }
        });
    }

    function requestedDaysGreaterThenAvailableDays() {
        const daysRequested = parseInt($("#daysRequested").val())
        const daysAvailable = parseInt($("#daysAvailable").val())

        if (daysRequested > daysAvailable) {
            $("#message").html("La cantidad de días solicitados no puede exceder la cantidad de días disponibles.")
            $("#btnSaveForm").prop("disable", true)
        } else {
            $("#message").html("")
            $("#btnSaveForm").prop("disable", false)
        }
    }

    function validateDate() {
        const startDateFormatted = GetDateFormat($("#startDate").val())
        const endDateFormatted = GetDateFormat($("#endDate").val())

        const startDate = new Date(startDateFormatted)
        const endDate = new Date(endDateFormatted)

        if (startDate > endDate) {
            $("#message").html("La fecha de inicio no puede ser mayor a la fecha fin")
            $("#message").addClass("text-danger")
        } else {
            $("#message").html("")
            $("#message").removeClass("text-danger")

            if (startDate instanceof Date && isFinite(startDate) && endDate instanceof Date && isFinite(endDate))
                requestedDays(startDate.toLocaleDateString(), endDate.toLocaleDateString())
        }
    }

    function GetDateFormat(date) {
        const parts = date.split("/");
        const dt = new Date(parseInt(parts[2], 10),
            parseInt(parts[1], 10) - 1,
            parseInt(parts[0], 10));

        return dt.toLocaleDateString();
    }

</script>
