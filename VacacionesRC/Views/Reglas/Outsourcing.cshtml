@model IEnumerable<VacacionesRC.Models.Employee>

@{
    ViewBag.Title = "Outsourcing";
}

<div class="container-fluid">
    <section class="text-dark border-custom border">
        <div class="bg-secondary text-light panel-custom border">
            <h6 class="panel-title">
                Empleados Outsourcing
            </h6>
        </div>

        <div class="row bg-light ml-3 mr-3 mt-2">
            <div class="col-1 mt-3 mb-3 ml-1" style="min-width: 115px">
                <input type="text" id="employeeId" name="employeeId" value="" class="form-control form-control-sm" placeholder="Código" readonly />
            </div>
            <div class="col-7 col-md-3 col-sm-3 mt-3 mb-3 ml-1" style="min-width: 235px">
                <input type="text" id="employeeName" name="employeeName" value="" class="form-control form-control-sm" placeholder="Nombre de Empleado" readonly />
            </div>

            <div class="col-1 mt-3" style="max-width: 65px">
                <a class="btn btn-sm btn-secondary pl-3 pr-3" href="javascript:void(0)" onclick="editEmployeeClear()" title="Limpiar campos"><span class="fa fa-remove"></span></a>
            </div>

            <div class="col-1 mt-3" style="min-width: 100px">
                <a class="btn btn-sm btn-danger pl-3 pr-3" href="javascript:void(0)" onclick="saveChangesEmployee()" title="Guardar cambios">Guardar</a>
            </div>
            <div class="col-1 mt-3">
                <a class="btn btn-sm btn-success pl-4 pr-4" href="javascript:void(0)" onclick="newEmployee()" title="Nuevo">Nuevo</a>
            </div>
        </div>

        @if (Model.Count() == 0)
        {
            <div class="text-center mt-5 mb-5">
                <h5>No existen registros para mostrar</h5>
            </div>
        }
        else
        {
            <div class="mt-3 ml-2 mr-2">
                <table id="employeesTable" class="table table-striped table-bordered table-condensed table-sm mt-4">
                    <thead>
                        <tr>
                            <th>
                                Código
                            </th>
                            <th>
                                Nombre
                            </th>
                            <th>
                                Creado
                            </th>
                            <th class="text-center">Editar</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@item.EmployeeId</td>
                                <td>@item.EmployeeName</td>
                                <td>@string.Format("{0:dd/MM/yyyy hh:mm tt}", item.CreatedDate)</td>

                                <td align="center">
                                    <a class="btn btn-sm btn-success" href="javascript:void(0)" onclick="editEmployee(@item.EmployeeId, '@item.EmployeeName')" title="Editar">
                                        <i class="fa fa-edit"></i>
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    
        </section>
</div>


<link href="~/Content/dataTables.bootstrap4.min.css" rel="stylesheet" />

@section scripts {
    <script src="~/Scripts/jquery.dataTables.min.js"></script>
    <script src="~/Scripts/dataTables.bootstrap4.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
}
<script type="text/javascript">

    $(document).ready(function () {

        $("#employeesTable").DataTable({
            "order": [[2, "asc"]],
            "pageLength": 10
        });

        //Replace Previous -> Anterior
        $('body :not(script)').contents().filter(function () {
            return this.nodeType === 3;
        }).replaceWith(function () {
            return this.nodeValue.replace('Previous', 'Anterior');
        });

        //Replace Next -> Próximo
        $('body :not(script)').contents().filter(function () {
            return this.nodeType === 3;
        }).replaceWith(function () {
            return this.nodeValue.replace('Next', 'Próximo');
        });

        //Replace Showing -> Mostrando
        $('body :not(script)').contents().filter(function () {
            return this.nodeType === 3;
        }).replaceWith(function () {
            return this.nodeValue.replace('Showing', 'Mostrando');
        });

        //Replace Show -> Mostrar
        $('body :not(script)').contents().filter(function () {
            return this.nodeType === 3;
        }).replaceWith(function () {
            return this.nodeValue.replace('Show', 'Mostrar');
        });

        //Replace Entries -> Registros
        $('body :not(script)').contents().filter(function () {
            return this.nodeType === 3;
        }).replaceWith(function () {
            return this.nodeValue.replace('entries', 'registros');
        });

        //Replace Search -> Buscar
        $('body :not(script)').contents().filter(function () {
            return this.nodeType === 3;
        }).replaceWith(function () {
            return this.nodeValue.replace('Search', 'Buscar');
        });
    });

    function editEmployee(employeeId, employeeName) {
        $("#employeeId").val(employeeId)
        $("#employeeName").val(employeeName)
        
        $("#employeeId").prop("readonly", true)
        $("#employeeName").prop("readonly", false)
    }

    function editEmployeeClear() {
        $("#employeeId").val('')
        $("#employeeName").val('')
    }

    function newEmployee() {
        $("#employeeId").val('')
        $("#employeeName").val('')
        
        $("#employeeId").prop("readonly", false)
        $("#employeeName").prop("readonly", false)
    }

    function saveChangesEmployee() {

        const employeeId = $("#employeeId").val()
        const employeeName = $("#employeeName").val()
        
        if (employeeId === '' || employeeName === '') {
            alert("Favor especificar completar todos los campos (no dejar ninguno vacío).")
            return false;
        }

        $.ajax({
            "url": `/Reglas/SaveOutsourcing?employeeId=${employeeId}&employeeName=${employeeName}`,
            "type": "POST",
            "success": async function (response) {
                if (response.result === "200") {
                    alert("Los cambios fueron guardados!")
                    window.location.reload();
                } else {
                    alert(response.message)
                }
            }
        });
    }

</script>

