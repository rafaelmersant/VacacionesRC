//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VacacionesRC.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class VacacionesRCEntities : DbContext
    {
        public VacacionesRCEntities()
            : base("name=VacacionesRCEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<LoginHistory> LoginHistories { get; set; }
        public virtual DbSet<DaysBySeniority> DaysBySeniorities { get; set; }
        public virtual DbSet<EmployeeDay> EmployeeDays { get; set; }
        public virtual DbSet<Holiday> Holidays { get; set; }
        public virtual DbSet<Notification> Notifications { get; set; }
        public virtual DbSet<Rule> Rules { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<ExceptionsVacation> ExceptionsVacations { get; set; }
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<Vacation> Vacations { get; set; }
    
        public virtual ObjectResult<GetVacacionesByDeptoOwner_Result> GetVacacionesByDeptoOwner(Nullable<int> ownerId, Nullable<int> year)
        {
            var ownerIdParameter = ownerId.HasValue ?
                new ObjectParameter("OwnerId", ownerId) :
                new ObjectParameter("OwnerId", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetVacacionesByDeptoOwner_Result>("GetVacacionesByDeptoOwner", ownerIdParameter, yearParameter);
        }
    
        public virtual ObjectResult<GetDeptos_Result> GetDeptos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDeptos_Result>("GetDeptos");
        }
    
        public virtual ObjectResult<GetEmployeeOnVacation_Result> GetEmployeeOnVacation(Nullable<int> deptoOwnerId)
        {
            var deptoOwnerIdParameter = deptoOwnerId.HasValue ?
                new ObjectParameter("deptoOwnerId", deptoOwnerId) :
                new ObjectParameter("deptoOwnerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmployeeOnVacation_Result>("GetEmployeeOnVacation", deptoOwnerIdParameter);
        }
    
        public virtual ObjectResult<GetEmployeePendingVacation_Result> GetEmployeePendingVacation(Nullable<int> deptoOwnerId)
        {
            var deptoOwnerIdParameter = deptoOwnerId.HasValue ?
                new ObjectParameter("deptoOwnerId", deptoOwnerId) :
                new ObjectParameter("deptoOwnerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmployeePendingVacation_Result>("GetEmployeePendingVacation", deptoOwnerIdParameter);
        }
    
        public virtual ObjectResult<GetEmployeeVacationRequested_Result> GetEmployeeVacationRequested(Nullable<int> deptoOwnerId)
        {
            var deptoOwnerIdParameter = deptoOwnerId.HasValue ?
                new ObjectParameter("deptoOwnerId", deptoOwnerId) :
                new ObjectParameter("deptoOwnerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmployeeVacationRequested_Result>("GetEmployeeVacationRequested", deptoOwnerIdParameter);
        }
    }
}
